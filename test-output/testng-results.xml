<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="13" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-31T18:14:50 IST" name="Loan Department" finished-at="2022-10-31T18:14:50 IST" duration-ms="187">
    <groups>
      <group name="Smoke">
        <method signature="day2.day()[pri:0, instance:Practice.day2@6bedbc4d]" name="day" class="Practice.day2"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-10-31T18:14:50 IST" name="Car loan" finished-at="2022-10-31T18:14:50 IST" duration-ms="113">
      <class name="Practice.day3">
        <test-method signature="zxamle()[pri:0, instance:Practice.day3@56cdfb3b]" started-at="2022-10-31T18:14:50 IST" name="zxamle" finished-at="2022-10-31T18:14:50 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zxamle -->
        <test-method signature="Afirstmethod()[pri:0, instance:Practice.day3@56cdfb3b]" started-at="2022-10-31T18:14:50 IST" name="Afirstmethod" finished-at="2022-10-31T18:14:50 IST" depends-on-methods="Practice.day3.zxamle" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afirstmethod -->
        <test-method is-config="true" signature="aftersuiteMethod()[pri:0, instance:Practice.day3@56cdfb3b]" started-at="2022-10-31T18:14:50 IST" name="aftersuiteMethod" finished-at="2022-10-31T18:14:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuiteMethod -->
      </class> <!-- Practice.day3 -->
      <class name="Practice.day1">
        <test-method is-config="true" signature="suitemethod()[pri:0, instance:Practice.day1@6a84a97d]" started-at="2022-10-31T18:14:49 IST" name="suitemethod" finished-at="2022-10-31T18:14:49 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suitemethod -->
      </class> <!-- Practice.day1 -->
    </test> <!-- Car loan -->
    <test started-at="2022-10-31T18:14:50 IST" name="Personal Loan" finished-at="2022-10-31T18:14:50 IST" duration-ms="187">
      <class name="Practice.day4">
        <test-method is-config="true" signature="beforeclassblock()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="beforeclassblock" finished-at="2022-10-31T18:14:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclassblock -->
        <test-method is-config="true" signature="beforemethodblock()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="beforemethodblock" finished-at="2022-10-31T18:14:50 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethodblock -->
        <test-method signature="Mobilelogin()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="Mobilelogin" finished-at="2022-10-31T18:14:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilelogin -->
        <test-method is-config="true" signature="aftermethoblock()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="aftermethoblock" finished-at="2022-10-31T18:14:50 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethoblock -->
        <test-method is-config="true" signature="beforemethodblock()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="beforemethodblock" finished-at="2022-10-31T18:14:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethodblock -->
        <test-method signature="apilogin()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="apilogin" finished-at="2022-10-31T18:14:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apilogin -->
        <test-method is-config="true" signature="aftermethoblock()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="aftermethoblock" finished-at="2022-10-31T18:14:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethoblock -->
        <test-method is-config="true" signature="beforemethodblock()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="beforemethodblock" finished-at="2022-10-31T18:14:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethodblock -->
        <test-method signature="webloginHomeLoan()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="webloginHomeLoan" finished-at="2022-10-31T18:14:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webloginHomeLoan -->
        <test-method is-config="true" signature="aftermethoblock()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="aftermethoblock" finished-at="2022-10-31T18:14:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethoblock -->
        <test-method is-config="true" signature="afterclassblock()[pri:0, instance:Practice.day4@932bc4a]" started-at="2022-10-31T18:14:50 IST" name="afterclassblock" finished-at="2022-10-31T18:14:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclassblock -->
      </class> <!-- Practice.day4 -->
      <class name="Practice.day2">
        <test-method signature="dataclass(java.lang.String,java.lang.String)[pri:0, instance:Practice.day2@6bedbc4d]" started-at="2022-10-31T18:14:50 IST" name="dataclass" data-provider="getData" finished-at="2022-10-31T18:14:50 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataclass -->
        <test-method signature="dataclass(java.lang.String,java.lang.String)[pri:0, instance:Practice.day2@6bedbc4d]" started-at="2022-10-31T18:14:50 IST" name="dataclass" data-provider="getData" finished-at="2022-10-31T18:14:50 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataclass -->
        <test-method signature="dataclass(java.lang.String,java.lang.String)[pri:0, instance:Practice.day2@6bedbc4d]" started-at="2022-10-31T18:14:50 IST" name="dataclass" data-provider="getData" finished-at="2022-10-31T18:14:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataclass -->
        <test-method signature="day()[pri:0, instance:Practice.day2@6bedbc4d]" started-at="2022-10-31T18:14:50 IST" name="day" finished-at="2022-10-31T18:14:50 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Practice.day2.day(day2.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day -->
      </class> <!-- Practice.day2 -->
      <class name="Practice.day1">
        <test-method is-config="true" signature="Prequisite()[pri:0, instance:Practice.day1@6a84a97d]" started-at="2022-10-31T18:14:50 IST" name="Prequisite" finished-at="2022-10-31T18:14:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Prequisite -->
        <test-method is-config="true" signature="AtLast()[pri:0, instance:Practice.day1@6a84a97d]" started-at="2022-10-31T18:14:50 IST" name="AtLast" finished-at="2022-10-31T18:14:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AtLast -->
      </class> <!-- Practice.day1 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
